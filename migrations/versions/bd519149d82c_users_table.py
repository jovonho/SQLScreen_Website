"""users table

Revision ID: bd519149d82c
Revises: 
Create Date: 2021-04-24 13:55:25.849026

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bd519149d82c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('firstname', sa.String(length=64), nullable=True),
    sa.Column('lastname', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.drop_table('quotes')
    op.drop_table('test')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('test',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('employees', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('dividend10day', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dividend50day', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='test_pkey')
    )
    op.create_table('quotes',
    sa.Column('symbol', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('pricechange', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('percentchange', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('exchangename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('exshortname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('exchangecode', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('marketplace', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sector', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('industry', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('volume', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('openprice', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('dayhigh', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('daylow', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('marketcap', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('marketcapallclasses', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('peratio', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('prevclose', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('dividendfrequency', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dividendyield', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('dividendamount', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('dividendcurrency', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('beta', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('eps', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('exdividenddate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('shortdescription', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('longdescription', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('website', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('email', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('phonenumber', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('fulladdress', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('employees', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('shareoutstanding', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('totaldebttoequity', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('totalsharesoutstanding', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('sharesescrow', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vwap', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('dividendpaydate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('weeks52high', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('weeks52low', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('alpha', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('averagevolume10d', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('averagevolume30d', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('averagevolume50d', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('pricetobook', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('pricetocashflow', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('returnonequity', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('returnonassets', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('day21movingavg', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('day50movingavg', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('day200movingavg', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('dividend3years', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('dividend5years', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('datatype', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('__typename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('symbol', name='quotes_pkey'),
    sa.UniqueConstraint('symbol', 'name', name='quotes_symbol_name_key')
    )
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
